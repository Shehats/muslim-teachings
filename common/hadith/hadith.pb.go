// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hadith/hadith.proto

package hadith

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DefaultResponse_Status int32

const (
	DefaultResponse_UNKOWN                DefaultResponse_Status = 0
	DefaultResponse_OK                    DefaultResponse_Status = 200
	DefaultResponse_CREATED               DefaultResponse_Status = 201
	DefaultResponse_NO_CONTENT            DefaultResponse_Status = 204
	DefaultResponse_BAD_REQUEST           DefaultResponse_Status = 400
	DefaultResponse_UNAUTHORIZED          DefaultResponse_Status = 401
	DefaultResponse_FORBIDDEN             DefaultResponse_Status = 403
	DefaultResponse_NOT_FOUND             DefaultResponse_Status = 404
	DefaultResponse_METHOD_NOT_ALLOWED    DefaultResponse_Status = 405
	DefaultResponse_GONE                  DefaultResponse_Status = 410
	DefaultResponse_UNPROCESSABLE_ENTITY  DefaultResponse_Status = 422
	DefaultResponse_INTERNAL_SERVER_ERROR DefaultResponse_Status = 500
	DefaultResponse_BAD_GATEWAY           DefaultResponse_Status = 502
)

var DefaultResponse_Status_name = map[int32]string{
	0:   "UNKOWN",
	200: "OK",
	201: "CREATED",
	204: "NO_CONTENT",
	400: "BAD_REQUEST",
	401: "UNAUTHORIZED",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	405: "METHOD_NOT_ALLOWED",
	410: "GONE",
	422: "UNPROCESSABLE_ENTITY",
	500: "INTERNAL_SERVER_ERROR",
	502: "BAD_GATEWAY",
}

var DefaultResponse_Status_value = map[string]int32{
	"UNKOWN":                0,
	"OK":                    200,
	"CREATED":               201,
	"NO_CONTENT":            204,
	"BAD_REQUEST":           400,
	"UNAUTHORIZED":          401,
	"FORBIDDEN":             403,
	"NOT_FOUND":             404,
	"METHOD_NOT_ALLOWED":    405,
	"GONE":                  410,
	"UNPROCESSABLE_ENTITY":  422,
	"INTERNAL_SERVER_ERROR": 500,
	"BAD_GATEWAY":           502,
}

func (x DefaultResponse_Status) String() string {
	return proto.EnumName(DefaultResponse_Status_name, int32(x))
}

func (DefaultResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{1, 0}
}

type EmptyPayload struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyPayload) Reset()         { *m = EmptyPayload{} }
func (m *EmptyPayload) String() string { return proto.CompactTextString(m) }
func (*EmptyPayload) ProtoMessage()    {}
func (*EmptyPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{0}
}

func (m *EmptyPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyPayload.Unmarshal(m, b)
}
func (m *EmptyPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyPayload.Marshal(b, m, deterministic)
}
func (m *EmptyPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyPayload.Merge(m, src)
}
func (m *EmptyPayload) XXX_Size() int {
	return xxx_messageInfo_EmptyPayload.Size(m)
}
func (m *EmptyPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyPayload.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyPayload proto.InternalMessageInfo

type DefaultResponse struct {
	Status               DefaultResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=hadith.DefaultResponse_Status" json:"status,omitempty"`
	Message              string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DefaultResponse) Reset()         { *m = DefaultResponse{} }
func (m *DefaultResponse) String() string { return proto.CompactTextString(m) }
func (*DefaultResponse) ProtoMessage()    {}
func (*DefaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{1}
}

func (m *DefaultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultResponse.Unmarshal(m, b)
}
func (m *DefaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultResponse.Marshal(b, m, deterministic)
}
func (m *DefaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultResponse.Merge(m, src)
}
func (m *DefaultResponse) XXX_Size() int {
	return xxx_messageInfo_DefaultResponse.Size(m)
}
func (m *DefaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultResponse proto.InternalMessageInfo

func (m *DefaultResponse) GetStatus() DefaultResponse_Status {
	if m != nil {
		return m.Status
	}
	return DefaultResponse_UNKOWN
}

func (m *DefaultResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HadithsRequest struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HadithsRequest) Reset()         { *m = HadithsRequest{} }
func (m *HadithsRequest) String() string { return proto.CompactTextString(m) }
func (*HadithsRequest) ProtoMessage()    {}
func (*HadithsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{2}
}

func (m *HadithsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HadithsRequest.Unmarshal(m, b)
}
func (m *HadithsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HadithsRequest.Marshal(b, m, deterministic)
}
func (m *HadithsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HadithsRequest.Merge(m, src)
}
func (m *HadithsRequest) XXX_Size() int {
	return xxx_messageInfo_HadithsRequest.Size(m)
}
func (m *HadithsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HadithsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HadithsRequest proto.InternalMessageInfo

func (m *HadithsRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

type GetHadithRequest struct {
	HadithSlug           string   `protobuf:"bytes,1,opt,name=hadithSlug,proto3" json:"hadithSlug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHadithRequest) Reset()         { *m = GetHadithRequest{} }
func (m *GetHadithRequest) String() string { return proto.CompactTextString(m) }
func (*GetHadithRequest) ProtoMessage()    {}
func (*GetHadithRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{3}
}

func (m *GetHadithRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHadithRequest.Unmarshal(m, b)
}
func (m *GetHadithRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHadithRequest.Marshal(b, m, deterministic)
}
func (m *GetHadithRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHadithRequest.Merge(m, src)
}
func (m *GetHadithRequest) XXX_Size() int {
	return xxx_messageInfo_GetHadithRequest.Size(m)
}
func (m *GetHadithRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHadithRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHadithRequest proto.InternalMessageInfo

func (m *GetHadithRequest) GetHadithSlug() string {
	if m != nil {
		return m.HadithSlug
	}
	return ""
}

type Hadith struct {
	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Narrators   []string `protobuf:"bytes,2,rep,name=narrators,proto3" json:"narrators,omitempty"`
	Sources     []string `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	Text        string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	MediaBase64 string   `protobuf:"bytes,5,opt,name=mediaBase64,proto3" json:"mediaBase64,omitempty"`
	// TODO use enums
	MediaType            string   `protobuf:"bytes,6,opt,name=mediaType,proto3" json:"mediaType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hadith) Reset()         { *m = Hadith{} }
func (m *Hadith) String() string { return proto.CompactTextString(m) }
func (*Hadith) ProtoMessage()    {}
func (*Hadith) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{4}
}

func (m *Hadith) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hadith.Unmarshal(m, b)
}
func (m *Hadith) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hadith.Marshal(b, m, deterministic)
}
func (m *Hadith) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hadith.Merge(m, src)
}
func (m *Hadith) XXX_Size() int {
	return xxx_messageInfo_Hadith.Size(m)
}
func (m *Hadith) XXX_DiscardUnknown() {
	xxx_messageInfo_Hadith.DiscardUnknown(m)
}

var xxx_messageInfo_Hadith proto.InternalMessageInfo

func (m *Hadith) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Hadith) GetNarrators() []string {
	if m != nil {
		return m.Narrators
	}
	return nil
}

func (m *Hadith) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Hadith) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Hadith) GetMediaBase64() string {
	if m != nil {
		return m.MediaBase64
	}
	return ""
}

func (m *Hadith) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

type HadithResponse struct {
	TopicSlug            string   `protobuf:"bytes,1,opt,name=topicSlug,proto3" json:"topicSlug,omitempty"`
	Hadith               *Hadith  `protobuf:"bytes,2,opt,name=hadith,proto3" json:"hadith,omitempty"`
	RelatedCategories    []string `protobuf:"bytes,3,rep,name=relatedCategories,proto3" json:"relatedCategories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HadithResponse) Reset()         { *m = HadithResponse{} }
func (m *HadithResponse) String() string { return proto.CompactTextString(m) }
func (*HadithResponse) ProtoMessage()    {}
func (*HadithResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_78376b08f1c07879, []int{5}
}

func (m *HadithResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HadithResponse.Unmarshal(m, b)
}
func (m *HadithResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HadithResponse.Marshal(b, m, deterministic)
}
func (m *HadithResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HadithResponse.Merge(m, src)
}
func (m *HadithResponse) XXX_Size() int {
	return xxx_messageInfo_HadithResponse.Size(m)
}
func (m *HadithResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HadithResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HadithResponse proto.InternalMessageInfo

func (m *HadithResponse) GetTopicSlug() string {
	if m != nil {
		return m.TopicSlug
	}
	return ""
}

func (m *HadithResponse) GetHadith() *Hadith {
	if m != nil {
		return m.Hadith
	}
	return nil
}

func (m *HadithResponse) GetRelatedCategories() []string {
	if m != nil {
		return m.RelatedCategories
	}
	return nil
}

func init() {
	proto.RegisterEnum("hadith.DefaultResponse_Status", DefaultResponse_Status_name, DefaultResponse_Status_value)
	proto.RegisterType((*EmptyPayload)(nil), "hadith.EmptyPayload")
	proto.RegisterType((*DefaultResponse)(nil), "hadith.DefaultResponse")
	proto.RegisterType((*HadithsRequest)(nil), "hadith.HadithsRequest")
	proto.RegisterType((*GetHadithRequest)(nil), "hadith.GetHadithRequest")
	proto.RegisterType((*Hadith)(nil), "hadith.Hadith")
	proto.RegisterType((*HadithResponse)(nil), "hadith.HadithResponse")
}

func init() { proto.RegisterFile("hadith/hadith.proto", fileDescriptor_78376b08f1c07879) }

var fileDescriptor_78376b08f1c07879 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0x7d, 0x8e, 0xfb, 0x52, 0xe5, 0x36, 0x2f, 0x9d, 0xde, 0x57, 0xa8, 0x89, 0x50, 0x15, 0x65,
	0x81, 0xba, 0x40, 0xa1, 0x0a, 0xa8, 0x42, 0x42, 0x20, 0x39, 0xf1, 0x34, 0x8d, 0x1a, 0xc6, 0x65,
	0xe2, 0x50, 0x95, 0x4d, 0x34, 0xd4, 0x43, 0x6b, 0xc9, 0xa9, 0x83, 0x3d, 0x41, 0x74, 0xdf, 0x1f,
	0x00, 0x02, 0x36, 0xac, 0x11, 0xbf, 0x05, 0x24, 0x96, 0xfc, 0x0e, 0x56, 0x88, 0x35, 0x8a, 0xbf,
	0x9a, 0x06, 0x15, 0xc4, 0x2a, 0xb9, 0xe7, 0x9e, 0x7b, 0x6e, 0xee, 0xf1, 0x89, 0xe1, 0xff, 0x63,
	0xe1, 0x7a, 0xea, 0xf8, 0x56, 0xf2, 0xd1, 0x18, 0x87, 0x81, 0x0a, 0xb0, 0x98, 0x54, 0xf5, 0x0a,
	0x94, 0xe9, 0x68, 0xac, 0x4e, 0xf7, 0xc4, 0xa9, 0x1f, 0x08, 0xb7, 0xfe, 0xb5, 0x00, 0xcb, 0x96,
	0x7c, 0x26, 0x26, 0xbe, 0xe2, 0x32, 0x1a, 0x07, 0x27, 0x91, 0xc4, 0x2d, 0x28, 0x46, 0x4a, 0xa8,
	0x49, 0x64, 0x68, 0x35, 0x6d, 0xa3, 0xd2, 0x5c, 0x6f, 0xa4, 0x52, 0x73, 0xc4, 0x46, 0x3f, 0x66,
	0xf1, 0x94, 0x8d, 0x06, 0x2c, 0x8e, 0x64, 0x14, 0x89, 0x23, 0x69, 0x14, 0x6a, 0xda, 0x46, 0x89,
	0x67, 0x65, 0xfd, 0x9b, 0x06, 0xc5, 0x84, 0x8c, 0x00, 0xc5, 0x01, 0xdb, 0xb5, 0xf7, 0x19, 0xf9,
	0x07, 0x17, 0xa1, 0x60, 0xef, 0x92, 0x4f, 0x1a, 0x96, 0x61, 0xb1, 0xcd, 0xa9, 0xe9, 0x50, 0x8b,
	0x7c, 0xd6, 0x70, 0x19, 0x80, 0xd9, 0xc3, 0xb6, 0xcd, 0x1c, 0xca, 0x1c, 0xf2, 0x45, 0x43, 0x02,
	0x4b, 0x2d, 0xd3, 0x1a, 0x72, 0xfa, 0x68, 0x40, 0xfb, 0x0e, 0x79, 0xa5, 0xe3, 0x0a, 0x94, 0x07,
	0xcc, 0x1c, 0x38, 0x3b, 0x36, 0xef, 0x3e, 0xa1, 0x16, 0x79, 0xad, 0x63, 0x05, 0x4a, 0xdb, 0x36,
	0x6f, 0x75, 0x2d, 0x8b, 0x32, 0xf2, 0x26, 0xae, 0x99, 0xed, 0x0c, 0xb7, 0xed, 0x01, 0xb3, 0xc8,
	0x5b, 0x1d, 0xd7, 0x00, 0x1f, 0x52, 0x67, 0xc7, 0xb6, 0x86, 0x53, 0xd8, 0xec, 0xf5, 0xec, 0x7d,
	0x6a, 0x91, 0x77, 0x3a, 0x96, 0x60, 0xa1, 0x63, 0x33, 0x4a, 0xde, 0xeb, 0x78, 0x0d, 0x56, 0x07,
	0x6c, 0x8f, 0xdb, 0x6d, 0xda, 0xef, 0x9b, 0xad, 0x1e, 0x1d, 0x52, 0xe6, 0x74, 0x9d, 0x03, 0xf2,
	0x51, 0xc7, 0x2a, 0x5c, 0xe9, 0x32, 0x87, 0x72, 0x66, 0xf6, 0x86, 0x7d, 0xca, 0x1f, 0x53, 0x3e,
	0xa4, 0x9c, 0xdb, 0x9c, 0x7c, 0xd7, 0xb3, 0xdf, 0xd7, 0x31, 0x1d, 0xba, 0x6f, 0x1e, 0x90, 0x1f,
	0x7a, 0xbd, 0x01, 0x95, 0x9d, 0xd8, 0xb3, 0x88, 0xcb, 0xe7, 0x13, 0x19, 0x29, 0xbc, 0x0e, 0x25,
	0x15, 0x8c, 0xbd, 0x43, 0x26, 0x46, 0x32, 0xf6, 0xb5, 0xc4, 0xcf, 0x81, 0x7a, 0x13, 0x48, 0x47,
	0xaa, 0x64, 0x24, 0x9b, 0x58, 0x07, 0x48, 0x7c, 0xef, 0xfb, 0x93, 0xa3, 0x74, 0x64, 0x06, 0xa9,
	0x7f, 0xd0, 0xa0, 0x98, 0x4c, 0x60, 0x05, 0x0a, 0x9e, 0x9b, 0x52, 0x0a, 0x9e, 0x3b, 0x5d, 0x76,
	0x22, 0xc2, 0x50, 0xa8, 0x20, 0x8c, 0x8c, 0x42, 0x4d, 0x9f, 0x2e, 0xcb, 0x81, 0xe9, 0x73, 0x8a,
	0x82, 0x49, 0x78, 0x28, 0x23, 0x43, 0x8f, 0x7b, 0x59, 0x89, 0x08, 0x0b, 0x4a, 0xbe, 0x54, 0xc6,
	0x42, 0xac, 0x14, 0x7f, 0xc7, 0x1a, 0x2c, 0x8d, 0xa4, 0xeb, 0x89, 0x96, 0x88, 0xe4, 0xd6, 0x1d,
	0xe3, 0xdf, 0xb8, 0x35, 0x0b, 0x4d, 0xb7, 0xc5, 0xa5, 0x73, 0x3a, 0x96, 0x46, 0x31, 0x39, 0x2d,
	0x07, 0xea, 0x67, 0x5a, 0xe6, 0x45, 0x1e, 0xb0, 0xcc, 0x8b, 0x99, 0xc3, 0xce, 0x01, 0xbc, 0x01,
	0x69, 0x58, 0xe3, 0x14, 0x2d, 0x35, 0x2b, 0x59, 0xfc, 0x52, 0x95, 0xb4, 0x8b, 0x37, 0x61, 0x25,
	0x94, 0xbe, 0x50, 0xd2, 0x6d, 0x0b, 0x25, 0x8f, 0x82, 0xd0, 0xcb, 0x0f, 0xfa, 0xb5, 0xd1, 0x3c,
	0xd3, 0xe1, 0xbf, 0x44, 0xa0, 0x2f, 0xc3, 0x17, 0xde, 0xa1, 0xc4, 0xbb, 0x50, 0x32, 0x5d, 0x37,
	0x73, 0xf0, 0xe2, 0x92, 0xea, 0xda, 0x25, 0x99, 0xdf, 0xd0, 0x36, 0x35, 0xdc, 0x82, 0x72, 0x47,
	0x2a, 0xd3, 0xf7, 0xd3, 0xe1, 0xd5, 0x8c, 0x3c, 0xfb, 0xd7, 0xaa, 0xce, 0x49, 0x6e, 0x6a, 0xf8,
	0x00, 0x20, 0x7f, 0xca, 0x11, 0x5e, 0xbd, 0xd8, 0xcf, 0x92, 0x52, 0x9d, 0xc3, 0xb3, 0xcd, 0x9b,
	0x1a, 0xde, 0x87, 0x52, 0x3e, 0x8f, 0x46, 0x46, 0x9b, 0x0f, 0xce, 0x65, 0x02, 0x48, 0xa1, 0x6c,
	0x49, 0x5f, 0x2a, 0xf9, 0x47, 0x85, 0xdf, 0x5e, 0x7f, 0x0f, 0xca, 0x83, 0xb1, 0x2b, 0x72, 0x99,
	0xbf, 0xb1, 0xee, 0x69, 0x31, 0x7e, 0x1d, 0xdd, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x5b,
	0x97, 0x06, 0xa5, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HadithServiceClient is the client API for HadithService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HadithServiceClient interface {
	AddHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_AddHadithClient, error)
	GetAllHadith(ctx context.Context, in *EmptyPayload, opts ...grpc.CallOption) (HadithService_GetAllHadithClient, error)
	GetHadiths(ctx context.Context, in *HadithsRequest, opts ...grpc.CallOption) (HadithService_GetHadithsClient, error)
	GetHadith(ctx context.Context, in *GetHadithRequest, opts ...grpc.CallOption) (*HadithResponse, error)
	DeleteHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_DeleteHadithClient, error)
	UpdateHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_UpdateHadithClient, error)
}

type hadithServiceClient struct {
	cc *grpc.ClientConn
}

func NewHadithServiceClient(cc *grpc.ClientConn) HadithServiceClient {
	return &hadithServiceClient{cc}
}

func (c *hadithServiceClient) AddHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_AddHadithClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HadithService_serviceDesc.Streams[0], "/hadith.HadithService/AddHadith", opts...)
	if err != nil {
		return nil, err
	}
	x := &hadithServiceAddHadithClient{stream}
	return x, nil
}

type HadithService_AddHadithClient interface {
	Send(*Hadith) error
	Recv() (*DefaultResponse, error)
	grpc.ClientStream
}

type hadithServiceAddHadithClient struct {
	grpc.ClientStream
}

func (x *hadithServiceAddHadithClient) Send(m *Hadith) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hadithServiceAddHadithClient) Recv() (*DefaultResponse, error) {
	m := new(DefaultResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hadithServiceClient) GetAllHadith(ctx context.Context, in *EmptyPayload, opts ...grpc.CallOption) (HadithService_GetAllHadithClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HadithService_serviceDesc.Streams[1], "/hadith.HadithService/GetAllHadith", opts...)
	if err != nil {
		return nil, err
	}
	x := &hadithServiceGetAllHadithClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HadithService_GetAllHadithClient interface {
	Recv() (*Hadith, error)
	grpc.ClientStream
}

type hadithServiceGetAllHadithClient struct {
	grpc.ClientStream
}

func (x *hadithServiceGetAllHadithClient) Recv() (*Hadith, error) {
	m := new(Hadith)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hadithServiceClient) GetHadiths(ctx context.Context, in *HadithsRequest, opts ...grpc.CallOption) (HadithService_GetHadithsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HadithService_serviceDesc.Streams[2], "/hadith.HadithService/GetHadiths", opts...)
	if err != nil {
		return nil, err
	}
	x := &hadithServiceGetHadithsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HadithService_GetHadithsClient interface {
	Recv() (*HadithResponse, error)
	grpc.ClientStream
}

type hadithServiceGetHadithsClient struct {
	grpc.ClientStream
}

func (x *hadithServiceGetHadithsClient) Recv() (*HadithResponse, error) {
	m := new(HadithResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hadithServiceClient) GetHadith(ctx context.Context, in *GetHadithRequest, opts ...grpc.CallOption) (*HadithResponse, error) {
	out := new(HadithResponse)
	err := c.cc.Invoke(ctx, "/hadith.HadithService/GetHadith", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hadithServiceClient) DeleteHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_DeleteHadithClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HadithService_serviceDesc.Streams[3], "/hadith.HadithService/DeleteHadith", opts...)
	if err != nil {
		return nil, err
	}
	x := &hadithServiceDeleteHadithClient{stream}
	return x, nil
}

type HadithService_DeleteHadithClient interface {
	Send(*GetHadithRequest) error
	Recv() (*DefaultResponse, error)
	grpc.ClientStream
}

type hadithServiceDeleteHadithClient struct {
	grpc.ClientStream
}

func (x *hadithServiceDeleteHadithClient) Send(m *GetHadithRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hadithServiceDeleteHadithClient) Recv() (*DefaultResponse, error) {
	m := new(DefaultResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hadithServiceClient) UpdateHadith(ctx context.Context, opts ...grpc.CallOption) (HadithService_UpdateHadithClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HadithService_serviceDesc.Streams[4], "/hadith.HadithService/UpdateHadith", opts...)
	if err != nil {
		return nil, err
	}
	x := &hadithServiceUpdateHadithClient{stream}
	return x, nil
}

type HadithService_UpdateHadithClient interface {
	Send(*Hadith) error
	Recv() (*DefaultResponse, error)
	grpc.ClientStream
}

type hadithServiceUpdateHadithClient struct {
	grpc.ClientStream
}

func (x *hadithServiceUpdateHadithClient) Send(m *Hadith) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hadithServiceUpdateHadithClient) Recv() (*DefaultResponse, error) {
	m := new(DefaultResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HadithServiceServer is the server API for HadithService service.
type HadithServiceServer interface {
	AddHadith(HadithService_AddHadithServer) error
	GetAllHadith(*EmptyPayload, HadithService_GetAllHadithServer) error
	GetHadiths(*HadithsRequest, HadithService_GetHadithsServer) error
	GetHadith(context.Context, *GetHadithRequest) (*HadithResponse, error)
	DeleteHadith(HadithService_DeleteHadithServer) error
	UpdateHadith(HadithService_UpdateHadithServer) error
}

func RegisterHadithServiceServer(s *grpc.Server, srv HadithServiceServer) {
	s.RegisterService(&_HadithService_serviceDesc, srv)
}

func _HadithService_AddHadith_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HadithServiceServer).AddHadith(&hadithServiceAddHadithServer{stream})
}

type HadithService_AddHadithServer interface {
	Send(*DefaultResponse) error
	Recv() (*Hadith, error)
	grpc.ServerStream
}

type hadithServiceAddHadithServer struct {
	grpc.ServerStream
}

func (x *hadithServiceAddHadithServer) Send(m *DefaultResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hadithServiceAddHadithServer) Recv() (*Hadith, error) {
	m := new(Hadith)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HadithService_GetAllHadith_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyPayload)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HadithServiceServer).GetAllHadith(m, &hadithServiceGetAllHadithServer{stream})
}

type HadithService_GetAllHadithServer interface {
	Send(*Hadith) error
	grpc.ServerStream
}

type hadithServiceGetAllHadithServer struct {
	grpc.ServerStream
}

func (x *hadithServiceGetAllHadithServer) Send(m *Hadith) error {
	return x.ServerStream.SendMsg(m)
}

func _HadithService_GetHadiths_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HadithsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HadithServiceServer).GetHadiths(m, &hadithServiceGetHadithsServer{stream})
}

type HadithService_GetHadithsServer interface {
	Send(*HadithResponse) error
	grpc.ServerStream
}

type hadithServiceGetHadithsServer struct {
	grpc.ServerStream
}

func (x *hadithServiceGetHadithsServer) Send(m *HadithResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HadithService_GetHadith_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHadithRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HadithServiceServer).GetHadith(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadith.HadithService/GetHadith",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HadithServiceServer).GetHadith(ctx, req.(*GetHadithRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HadithService_DeleteHadith_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HadithServiceServer).DeleteHadith(&hadithServiceDeleteHadithServer{stream})
}

type HadithService_DeleteHadithServer interface {
	Send(*DefaultResponse) error
	Recv() (*GetHadithRequest, error)
	grpc.ServerStream
}

type hadithServiceDeleteHadithServer struct {
	grpc.ServerStream
}

func (x *hadithServiceDeleteHadithServer) Send(m *DefaultResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hadithServiceDeleteHadithServer) Recv() (*GetHadithRequest, error) {
	m := new(GetHadithRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HadithService_UpdateHadith_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HadithServiceServer).UpdateHadith(&hadithServiceUpdateHadithServer{stream})
}

type HadithService_UpdateHadithServer interface {
	Send(*DefaultResponse) error
	Recv() (*Hadith, error)
	grpc.ServerStream
}

type hadithServiceUpdateHadithServer struct {
	grpc.ServerStream
}

func (x *hadithServiceUpdateHadithServer) Send(m *DefaultResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hadithServiceUpdateHadithServer) Recv() (*Hadith, error) {
	m := new(Hadith)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HadithService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hadith.HadithService",
	HandlerType: (*HadithServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHadith",
			Handler:    _HadithService_GetHadith_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddHadith",
			Handler:       _HadithService_AddHadith_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetAllHadith",
			Handler:       _HadithService_GetAllHadith_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetHadiths",
			Handler:       _HadithService_GetHadiths_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DeleteHadith",
			Handler:       _HadithService_DeleteHadith_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateHadith",
			Handler:       _HadithService_UpdateHadith_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "hadith/hadith.proto",
}
